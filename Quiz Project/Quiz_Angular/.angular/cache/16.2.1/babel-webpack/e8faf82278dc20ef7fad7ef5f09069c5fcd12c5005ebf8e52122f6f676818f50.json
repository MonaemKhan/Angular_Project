{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../ServeforQuiz/question-service.service\";\nimport * as i4 from \"@angular/common\";\nfunction EditQuestionComponent_option_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", item_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r1);\n  }\n}\nexport class EditQuestionComponent {\n  constructor(fb, route_id, questionService) {\n    this.fb = fb;\n    this.route_id = route_id;\n    this.questionService = questionService;\n    this.RightAnswer = [];\n  }\n  ngOnInit() {\n    this.QuestionForm = this.fb.group({\n      questionId: 0,\n      questionName: ['', Validators.required],\n      option1: ['', Validators.required],\n      option2: ['', Validators.required],\n      option3: ['', Validators.required],\n      option4: ['', Validators.required],\n      right_Answer: ['', Validators.required],\n      mark: 0,\n      quizId: 0\n    });\n    this.route_id.paramMap.subscribe({\n      next: re => {\n        const id = re.get('Id');\n        if (id) {\n          this.questionService.getQuestion(parseInt(id)).subscribe({\n            next: re => {\n              this.QuestionForm.patchValue(re);\n              console.log(this.QuestionForm.value);\n            },\n            error: er => {\n              console.log(er);\n            }\n          });\n        }\n      },\n      error: er => {\n        console.log(er);\n      }\n    });\n  }\n  pushrightAnswer() {}\n}\n_class = EditQuestionComponent;\n_class.ɵfac = function EditQuestionComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.QuestionServiceService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-edit-question\"]],\n  decls: 37,\n  vars: 2,\n  consts: [[1, \"container\"], [3, \"formGroup\"], [\"formControlName\", \"questionId\", \"hidden\", \"\"], [1, \"col-md-12\"], [1, \"form-label\", \"text-success\"], [\"type\", \"text\", \"formControlName\", \"questionName\", 1, \"form-control\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"option1\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"option2\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"option3\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"option4\", 1, \"form-control\"], [1, \"col-md-8\"], [\"aria-label\", \"Default select example\", \"formControlName\", \"right_Answer\", 1, \"form-select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-4\"], [\"type\", \"number\", \"formControlName\", \"mark\", 1, \"form-control\"], [3, \"value\"]],\n  template: function EditQuestionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\");\n      i0.ɵɵelement(3, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Question\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"div\", 6)(10, \"div\", 7)(11, \"label\", 8);\n      i0.ɵɵtext(12, \"Option 1\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 7)(15, \"label\", 8);\n      i0.ɵɵtext(16, \"Option 2\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 7)(19, \"label\", 8);\n      i0.ɵɵtext(20, \"Option 3\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 7)(23, \"label\", 8);\n      i0.ɵɵtext(24, \"Option 4\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 12);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"div\", 3)(27, \"div\", 6)(28, \"div\", 13)(29, \"label\", 8);\n      i0.ɵɵtext(30, \"Right Answer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"select\", 14);\n      i0.ɵɵtemplate(32, EditQuestionComponent_option_32_Template, 2, 2, \"option\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"div\", 16)(34, \"label\", 8);\n      i0.ɵɵtext(35, \"Mark\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"input\", 17);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.QuestionForm);\n      i0.ɵɵadvance(31);\n      i0.ɵɵproperty(\"ngForOf\", ctx.RightAnswer);\n    }\n  },\n  dependencies: [i4.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵpropertyInterpolate","item_r1","ɵɵadvance","ɵɵtextInterpolate","EditQuestionComponent","constructor","fb","route_id","questionService","RightAnswer","ngOnInit","QuestionForm","group","questionId","questionName","required","option1","option2","option3","option4","right_Answer","mark","quizId","paramMap","subscribe","next","re","id","get","getQuestion","parseInt","patchValue","console","log","value","error","er","pushrightAnswer","ɵɵdirectiveInject","i1","FormBuilder","i2","ActivatedRoute","i3","QuestionServiceService","selectors","decls","vars","consts","template","EditQuestionComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","EditQuestionComponent_option_32_Template","ɵɵproperty"],"sources":["C:\\Users\\khanm\\OneDrive\\Desktop\\Angular_Project\\Quiz Project\\Quiz_Angular\\src\\app\\quiz\\edit-question\\edit-question.component.ts","C:\\Users\\khanm\\OneDrive\\Desktop\\Angular_Project\\Quiz Project\\Quiz_Angular\\src\\app\\quiz\\edit-question\\edit-question.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuestionServiceService } from '../ServeforQuiz/question-service.service';\n\n@Component({\n  selector: 'app-edit-question',\n  templateUrl: './edit-question.component.html',\n  styleUrls: ['./edit-question.component.css']\n})\nexport class EditQuestionComponent implements OnInit {\n  QuestionForm: any;\n  RightAnswer:any[]=[];\n\n  constructor(private fb:FormBuilder,\n    private route_id: ActivatedRoute,\n    private questionService: QuestionServiceService) {}\n\n  ngOnInit(): void {\n    this.QuestionForm = this.fb.group({\n      questionId: 0,\n      questionName: ['', Validators.required],\n      option1: ['', Validators.required],\n      option2: ['', Validators.required],\n      option3: ['', Validators.required],\n      option4: ['', Validators.required],\n      right_Answer: ['', Validators.required],\n      mark: 0,\n      quizId: 0\n    });\n\n    this.route_id.paramMap.subscribe({\n      next: (re)=>{\n        const id = re.get('Id');\n        if(id){\n          this.questionService.getQuestion(parseInt(id)).subscribe({\n            next: (re)=>{\n              this.QuestionForm.patchValue(re);\n              console.log(this.QuestionForm.value);              \n            },\n            error: (er)=>{\n              console.log(er);\n            }\n          });\n        }\n      },\n      error: (er)=>{\n        console.log(er);\n      }\n    });\n  }\n\n  pushrightAnswer(){\n    \n  }\n}\n","<div class=\"container\">\n    <form [formGroup]=\"QuestionForm\">\n        <div>\n            <input formControlName=\"questionId\" hidden>\n        </div>\n        <div class=\"col-md-12\">\n            <label class=\"form-label text-success\">Question</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"questionName\">\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <label class=\"form-label\">Option 1</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"option1\">\n                </div>\n                <div class=\"col-md-6\">\n                    <label class=\"form-label\">Option 2</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"option2\">\n                </div>\n                <div class=\"col-md-6\">\n                    <label class=\"form-label\">Option 3</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"option3\">\n                </div>\n                <div class=\"col-md-6\">\n                    <label class=\"form-label\">Option 4</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"option4\">\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"row\">\n                <div class=\"col-md-8\">\n                    <label class=\"form-label\">Right Answer</label>\n                    <select class=\"form-select\" aria-label=\"Default select example\" formControlName=\"right_Answer\">\n                        <option *ngFor=\"let item of RightAnswer\" value=\"{{item}}\">{{item}}</option>\n                    </select>\n                </div>\n                <div class=\"col-md-4\">\n                    <label class=\"form-label\">Mark</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"mark\">\n                </div>\n            </div>\n        </div>\n    </form>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}