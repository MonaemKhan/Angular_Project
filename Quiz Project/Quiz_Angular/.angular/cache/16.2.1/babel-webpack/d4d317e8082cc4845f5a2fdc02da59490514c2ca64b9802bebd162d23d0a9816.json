{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let EditQuestionComponent = class EditQuestionComponent {\n  constructor(fb, route_id, questionService, quizService, route) {\n    this.fb = fb;\n    this.route_id = route_id;\n    this.questionService = questionService;\n    this.quizService = quizService;\n    this.route = route;\n    this.RightAnswer = [];\n  }\n  ngOnInit() {\n    this.QuestionForm = this.fb.group({\n      questionId: 0,\n      questionName: ['', Validators.required],\n      option1: ['', Validators.required],\n      option2: ['', Validators.required],\n      option3: ['', Validators.required],\n      option4: ['', Validators.required],\n      right_Answer: ['', Validators.required],\n      mark: 0,\n      quizId: 0\n    });\n    this.QuizForm = this.fb.group({\n      quizId: ['', Validators.required],\n      quizName: ['']\n    });\n    //questionId\n    this.route_id.paramMap.subscribe({\n      next: re => {\n        const id = re.get('QuestionId');\n        if (id) {\n          this.questionService.getQuestion(parseInt(id)).subscribe({\n            next: re => {\n              this.QuestionForm.patchValue(re);\n              this.RightAnswer = [];\n              if (this.QuestionForm.value.option1 !== '') {\n                this.RightAnswer.push(this.QuestionForm.value.option1);\n              }\n              if (this.QuestionForm.value.option2 !== '') {\n                this.RightAnswer.push(this.QuestionForm.value.option2);\n              }\n              if (this.QuestionForm.value.option3 !== '') {\n                this.RightAnswer.push(this.QuestionForm.value.option3);\n              }\n              if (this.QuestionForm.value.option4 !== '') {\n                this.RightAnswer.push(this.QuestionForm.value.option4);\n              }\n              // console.log(this.QuestionForm.value);\n            },\n\n            error: er => {\n              console.log(er);\n            }\n          });\n        }\n      },\n      error: er => {\n        console.log(er);\n      }\n    });\n    //quizId\n    this.route_id.paramMap.subscribe({\n      next: re => {\n        const id = re.get('QuizId');\n        if (id) {\n          this.quizService.getQuiz(parseInt(id)).subscribe({\n            next: re => {\n              // console.log(re);\n              this.QuizForm.patchValue(re);\n              // console.log(this.QuizForm.value);\n            },\n\n            error: er => {\n              console.log(er);\n            }\n          });\n        }\n      },\n      error: er => {\n        console.log(er);\n      }\n    });\n    this.quizService.getAllQuiz().subscribe({\n      next: re => {\n        this.allquizList = re;\n        // console.log(this.allquizList);\n      },\n\n      error: er => {\n        console.log(er);\n      }\n    });\n  }\n  pushrightAnswer() {\n    this.RightAnswer = [];\n    this.RightAnswer.push(this.QuestionForm.value.option1);\n    if (this.QuestionForm.value.Option2 !== ' ') {\n      this.RightAnswer.push(this.QuestionForm.value.option2);\n    }\n    if (this.QuestionForm.value.Option3 !== ' ') {\n      this.RightAnswer.push(this.QuestionForm.value.option3);\n    }\n    if (this.QuestionForm.value.Option4 !== ' ') {\n      this.RightAnswer.push(this.QuestionForm.value.option4);\n    }\n  }\n  updateQuestion() {\n    this.QuestionForm.value.quizId = this.QuizForm.value.quizId;\n    // console.log(this.QuestionForm.value);\n    // console.log(this.QuizForm.value);\n    this.questionService.putQuestion(this.QuestionForm.value.questionId, this.QuestionForm.value).subscribe({\n      next: re => {\n        console.log('responce back');\n        console.log(re);\n      },\n      error: er => {\n        console.log(er);\n      }\n    });\n  }\n  deleteQuestion() {}\n};\nEditQuestionComponent = __decorate([Component({\n  selector: 'app-edit-question',\n  templateUrl: './edit-question.component.html',\n  styleUrls: ['./edit-question.component.css']\n})], EditQuestionComponent);","map":{"version":3,"names":["Component","Validators","EditQuestionComponent","constructor","fb","route_id","questionService","quizService","route","RightAnswer","ngOnInit","QuestionForm","group","questionId","questionName","required","option1","option2","option3","option4","right_Answer","mark","quizId","QuizForm","quizName","paramMap","subscribe","next","re","id","get","getQuestion","parseInt","patchValue","value","push","error","er","console","log","getQuiz","getAllQuiz","allquizList","pushrightAnswer","Option2","Option3","Option4","updateQuestion","putQuestion","deleteQuestion","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\khanm\\OneDrive\\Desktop\\Angular_Project\\Quiz Project\\Quiz_Angular\\src\\app\\quiz\\edit-question\\edit-question.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Route } from '@angular/router';\nimport { QuestionServiceService } from '../ServeforQuiz/question-service.service';\nimport { QuizServiceService } from '../ServeforQuiz/quiz-service.service';\n\n@Component({\n  selector: 'app-edit-question',\n  templateUrl: './edit-question.component.html',\n  styleUrls: ['./edit-question.component.css']\n})\nexport class EditQuestionComponent implements OnInit {\n  QuestionForm: any;\n  QuizForm: any;\n  RightAnswer: any[] = [];\n  allquizList: any;\n\n  constructor(private fb: FormBuilder,\n    private route_id: ActivatedRoute,\n    private questionService: QuestionServiceService,\n    private quizService: QuizServiceService,\n    private route:Route) { }\n\n  ngOnInit(): void {\n    this.QuestionForm = this.fb.group({\n      questionId: 0,\n      questionName: ['', Validators.required],\n      option1: ['', Validators.required],\n      option2: ['', Validators.required],\n      option3: ['', Validators.required],\n      option4: ['', Validators.required],\n      right_Answer: ['', Validators.required],\n      mark: 0,\n      quizId: 0\n    });\n\n    this.QuizForm = this.fb.group({\n      quizId: ['', Validators.required],\n      quizName: ['']\n    });\n\n    //questionId\n    this.route_id.paramMap.subscribe({\n      next: (re) => {\n        const id = re.get('QuestionId');\n        if (id) {\n          this.questionService.getQuestion(parseInt(id)).subscribe({\n            next: (re) => {\n              this.QuestionForm.patchValue(re);\n              this.RightAnswer = [];\n              if (this.QuestionForm.value.option1 !== '') {\n                this.RightAnswer.push(this.QuestionForm.value.option1);\n              }\n              if (this.QuestionForm.value.option2 !== '') {\n                this.RightAnswer.push(this.QuestionForm.value.option2);\n              }\n              if (this.QuestionForm.value.option3 !== '') {\n                this.RightAnswer.push(this.QuestionForm.value.option3);\n              }\n              if (this.QuestionForm.value.option4 !== '') {\n                this.RightAnswer.push(this.QuestionForm.value.option4);\n              }\n              // console.log(this.QuestionForm.value);\n            },\n            error: (er) => {\n              console.log(er);\n            }\n          });\n        }\n      },\n      error: (er) => {\n        console.log(er);\n      }\n    });\n\n    //quizId\n    this.route_id.paramMap.subscribe({\n      next: (re) => {\n        const id = re.get('QuizId');\n        if (id) {\n          this.quizService.getQuiz(parseInt(id)).subscribe({\n            next: (re) => {\n              // console.log(re);\n              this.QuizForm.patchValue(re);\n              // console.log(this.QuizForm.value);\n            },\n            error: (er) => {\n              console.log(er);\n            }\n          });\n        }\n      },\n      error: (er) => {\n        console.log(er);\n      }\n    });\n\n    this.quizService.getAllQuiz().subscribe({\n      next: (re) => {\n        this.allquizList = re;\n        // console.log(this.allquizList);\n      },\n      error: (er) => {\n        console.log(er);\n      }\n    });\n  }\n\n  pushrightAnswer() {\n    this.RightAnswer = [];\n    this.RightAnswer.push(this.QuestionForm.value.option1);\n    if (this.QuestionForm.value.Option2 !== ' ') {\n      this.RightAnswer.push(this.QuestionForm.value.option2);\n    }\n    if (this.QuestionForm.value.Option3 !== ' ') {\n      this.RightAnswer.push(this.QuestionForm.value.option3);\n    }\n    if (this.QuestionForm.value.Option4 !== ' ') {\n      this.RightAnswer.push(this.QuestionForm.value.option4);\n    }\n  }\n\n  updateQuestion() {\n    this.QuestionForm.value.quizId = this.QuizForm.value.quizId;\n    // console.log(this.QuestionForm.value);\n    // console.log(this.QuizForm.value);\n    this.questionService.putQuestion(this.QuestionForm.value.questionId,this.QuestionForm.value).subscribe({\n      next: (re)=>{\n        console.log('responce back');        \n        console.log(re);     \n      },\n      error: (er)=>{\n        console.log(er);        \n      }\n    });\n  }\n\n  deleteQuestion() {\n\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}